

=== Alternating Least Square (ALS)

Algoritmus ALS bude rozdelene na dve zakladni komponenty *Model* a *Estimator* tak jak sou popsany v kapitole [REF SPARK ML]. Estimator na zaklade datasetu s hodnocenimi spocita uzivatelse a produktove faktory a inicializuje s nimi Model. Model nasledne na zaklade techto faktoru bude poskytovat doporuceni.

===== Model

Model je inicializovan se referencemi na uzivatelske a produktove faktorove datasety. Oba tyto datasety maji analogickou strukturu kde radky jsou dvojice klic, hodnota. KLic obsahje celociselny identifikator uzivatele respektive produktu. Jako hodnota je prislusny faktorovy vektor v podobe pole realnych numerickych hodnot. Vektorovy soucin uzivatelskeho a produktoveho faktoru predikuje hodnoceni produktu uzivatelem. Kartezsky soucin obou datasetu je kompletni matice obsahujici predikce hodnoceni vsech produktu pro vsechny uzivatele. Model musi povine implementovat metodu *transform* viz. [REF SPARK ML] se vstupnim parametrem typu Dataset [REF SPARK STRUCT]. Pro manipulaci s timto datasetem Model vyzaduje tyto parametry:

userCol::
    Jmeno sloupce ve vstupnim datasetu, ktery obsahuje numericky identifikator uzivatele.

itemCol::
    Jmeno sloupce ve vstupnim datasetu, ktery obsahuje numericky polozky. 

predictionCol::
    Jmeno sloupce pod kterym Model prida predikce hodnoceni do vstupniho datasetu.

Metoda transform provede join mezi vstupnim datasetem a faktorovymi datasety, na urovni radku provede vektorovy soucin faktoru a vysledek ulozi do sloupce s predikcemi:

[source, scala, numbered]
----
include::{scala-dir}/mlonspark/ALSEngine.scala[tags=model-transform]
---- 

Model dale obsahuje metody pro doporuceni konkretniho poctu produktu uzvatelum a naopak. 

 