
== Strojové uèení

Strojové uèení je trochu mlhavý pojem, obecnì ale mùžeme øíct, že strojové uèení je vìda o programování poèítaèù tak, aby se byly schopné uèit z dat. Aplikace strojového uèení již pronikla do našeho každodeního života, jedním z viditelnìjších pøípadù je napøíklad filtrování spamu. Pøi tvorbì takového systému tradièním pøístupem by programátor nadefinoval sadu pravidel, která by na základì obsahu daného emailu rozhodovala zda se jedné o spam nebo ne. Takový systém by ale zdaleka nebyl triviální a musel by se prùbìžnì pøizpùsobovat mìnícím se podmínkám. Sada vestavìných pravidel by se stávala èím dál tím více komplexnìjší s narùstajícími požadavky na údržbu. Spam filtr založený na strojovém uèení používá rozdílný pøístup. Automaticky se nauèí, která slova a fráze spam typicky obsahuje. Zøejmý problém je zde fráze 'automaticky se nauèí'. Uèícímu algoritmu je nutné poskytnout podmínky za kterých se bude schopný sám uèit. V pøípade spam filtru uèícímu algoritmu poskytneme databázi historických emailù. Emaily samotné nám ale nestaèí, pro potøeby uèícího algoritmu ještì potøebujeme oznaèení zda se je daný historický email spam nebo ne. Obecnì mùžeme øíct, že se snažíme vytvoøit abstraktní model, který nám  na základì zadaného, pøedem nepoznaného, vstupu poskytne nìjakou formu výstupu. Skupinu postupù, kdy k uèení použijeme data obsahující vstup a požadovaný výstup, nazýváme uèení s uèitelem. Uèeni s uèitelem je pouze jednou z kategorií v rámci technik strojového uèení. Úèelem této práce není poskytnout kompletní pøehled všech tìchto technik, tento je možné dohledat napøíklad zde [ISL ESL HANDSON]. Pro aplikaci strojového uèení aktuálnì existuje celá øada nástrojù. Mezi nejpoužívanìjší patøí MATLAB, knihova Scikit-Learn pro Python nebo RStudio.
Vytvoøení funkèního modelu na základì vstupních dat je komplexní postup, který není specifický pro žádnou konkrétní platformu. Tento postup je možné rozdìlit do nìkolika základních krokù:

1. Zkoumání a pøíprava dat
2. Výbìr modelu
3. Vytvoøení a vyhodnocení modelu 
    
=== Zkoumání a pøíprava dat 

Vstupní data nemusí a obvykle nebudou pøipravená pro strojové zpracování. Toto platí zejména pro pøípad implicitních dat, která mohou byt v podobì rùzných logovacích souborù, obsahujících dalši nerelevantní údaje, nebo v podobì databázových tabulek. Z takových zdrojù je tøeba extrahovat potøebná data do struktur vhodnìjších pro další zpracování. Dále je nutné vstupní data prozkoumat a porozumìt jejich zakladním charakteristikám. K tomu slouží rùzne vizualizaèní a dotazovací nástroje, které nám umožní porozumìt distribucím hodnot jednotlivých vlastností, korelacím mezi vlastnostmi atd. Obecnì se tato fáze v odborné literatuøe uvádí pod zkratkou EDA (Exploratory Data Analysis). V rámci této fáze by se mìly objevit nedostatky a chyby ve vstupních datech, které by mìly za následek pokøiveni vysledneho modelu. Dále je tøeba upravit vlastnosti vstupních dat tak aby jejich hodnoty byly vhodné pro strojové zpracovaní. Typicky pøevodem vlastností na numerické hodnoty a úpravou škály jejich hodnot. Dva základní postupy pro úpravu škály numerických hodnot jsou normalizce a standardizace. U normalizace odeèteme minimum a dìlíme rozsahem. Toto nám pøevede hodnoty do intervalu <0, 1>. Normalizaci definujeme jako:

[stem]  
++++
\begin{align*}
x_{norm} = \frac{x - x_{min}{x_{max}-x_{min}}
\end{align*}
++++   

       

===  Výbìr modelu

Jaky typ modelu zvolit je plne zavisle na zvolenem ukolu. Pro nektere ulohy bude vhodnejsi linearni model a pro jine neuronova sit. Typickym postupem je vytvorit  model pro nekolik nejvhodnejsich kandidatu. 

=== Vytvoøení a vyhodnocení modelu 

V teto fazi mame sadu historickych dat pro dany ukol a vybrany typ modelu, na jejich zaklade nasledne vytvorime ci vytrenujeme cilovy model. Tento model by mel byt schopny predpovidat vystupni hodnoty na zaklade vstupnich hodnot, ktere nebyly pouzity pro jeho vytvoreni. Toto nam ovsem nestaci, chceme nejakymn zpusobem zjistit nakolik ne nas model presny. Jestli se muzeme na jeho predpovdi spolehnout, napriklad v ramci nejakych obchodnich rozhodnuti. Potrebujeme tedy nejakou metodiku jak zmerit jeho presnost. Dale pokud model obsahuje nejeka paramewtry, ktere ovlvnuji jeho chovani, je nutne nalezt jejich optimalni hodnoty. 

   
     